{"version":3,"file":"5.3d30697bd66c1b6747ea.hot-update.js","sources":["webpack:///components/Header.js","webpack:///components/TransferForm.js","webpack:///routes.js"],"sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from '../routes';\nexport default () => {\n  return (\n    <Menu style={{ marginTop: '10px' }}> \n      <Link route=\"/\">\n        <a className=\"item\">Logo Here</a>\n      </Link> \n      \n      <Menu.Menu position=\"right\">\n        <Link route=\"/transfer\">\n          <a className=\"item\">Transfer</a>\n        </Link>\n\n        <Link route=\"/approve\">\n          <a className=\"item\">Approve</a>\n        </Link>\n      </Menu.Menu>\n    </Menu> \n   \n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// components/Header.js","import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport { Router } from '../routes';\n \nexport default class TransferForm extends Component {\n  state = {\n    to: '',\n    value: '',\n    errorMessage: '',\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    const {web3, contract, currentAccount} = this.props;\n    console.log(\"******* TransferForm onSubmit() address ***********\");\n    console.log(web3);\n    console.log(contract);\n    console.log(currentAccount); \n    // const web3 = await getWeb3()     \n    // console.log(\"******* ContributeForm onSubmit()  web3  ***********\");\n    // console.log(web3);\n      \n    // const campaign = new web3.eth.Contract(\n    //   campaignDefinition.abi,\n    //   address\n    // )\n    // console.log(\"******* ContributeForm onSubmit()  campaign  ***********\");\n    // console.log(campaign);\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"******* ContributeForm onSubmit()  accounts  ***********\");\n      console.log(accounts);\n \n\n      await campaign.methods.transferFrom().send({\n        from: accounts[0],\n        to: this.state.to ,\n        tokens: this.state.tokens,\n      });\n\n      Router.replaceRoute(`/transfer`);\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false, value: '', to: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        <Form.Field>          \n          <label>Tokens to Transfer</label>\n          \n          <Input\n            value={this.state.tokens}\n            onChange={event => this.setState({ tokens: event.target.value })}\n            label=\"No. of Tokens\"\n            labelPosition=\"left\"\n          />\n          <p></p>\n          <Input\n            value={this.state.to}\n            onChange={event => this.setState({ to: event.target.value })}\n            label=\"Transfer To\"\n            labelPosition=\"left\"\n          />\n          <p></p>\n        </Form.Field>\n\n        <Message error header=\"ERROR\" content={this.state.errorMessage} />\n        <Button primary loading={this.state.loading}>\n          Transfer Now\n        </Button>\n      </Form>\n    );\n  }\n}\n \n\n\n\n// WEBPACK FOOTER //\n// components/TransferForm.js","const routes = require('next-routes')();\n\nroutes\n  .add('/', '/index') \n    // Transfer the balance from token owner's account to `to` account\n    // - Owner's account must have sufficient balance to transfer\n    // - 0 value transfers are allowed\n  .add('/transfer', '/transfer')  \n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account\n  .add('/approve', '/approveTransfer') \n    // Transfer `tokens` from the `from` account to the `to` account\n  .add('/transferFrom', '/transferFrom')\n    // Returns the amount of tokens approved by the owner that can be\n    // transferred to the spender's account\n  .add('/allowance', '/allowance')\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n    // from the token owner's account. The `spender` contract function\n    // `receiveApproval(...)` is then executed\n  .add('/approveAndCall', '/approveAndCall')    \nmodule.exports = routes;\n\n\n\n// WEBPACK FOOTER //\n// routes.js"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AACA;AADA;AAsBA;AACA;AACA;AAxBA;AAAA;AA4BA;AACA;AACA;AAHA;AACA;AA5BA;AAiCA;AAjCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAkCA;AAAA;AAAA;AACA;AApCA;AAsCA;AAAA;AAAA;AAAA;AAAA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAwCA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA7EA;AACA;;;;;;;;ACLA;AACA;AACA;AAGA;AACA;AAJA;AAOA;AAPA;AAAA;AAYA;AAZA;AAeA;AACA;AAhBA;AAkBA;;;;A","sourceRoot":""}